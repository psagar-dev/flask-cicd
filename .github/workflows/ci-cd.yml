name: CI/CD Pipeline for Flask App
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
    push:
        branches:
          - staging
    release:
        types:
            - published
    workflow_dispatch:

jobs:
    install-dependencies:
        runs-on: self-hosted
        steps:
            - uses: ./.github/actions/setup-python-env
    
    run-tests:
        runs-on: self-hosted
        needs: install-dependencies
        steps:
            - uses: ./.github/actions/setup-python-env
            
            - name: Run tests
              run: |
                python -m pytest tests/

    deploy-staging:
        runs-on: self-hosted
        needs: run-tests
        if: github.ref == 'refs/heads/staging'
        steps:
            - name: Deploy to Staging
              run: |
                echo "Deploying to staging..."

            - name: Notify via Slack or Email (optional)
              run: echo "Staging deployment finished."

    deploy-production:
        runs-on: self-hosted
        needs: run-tests
        if: github.event_name == 'release' && github.event.action == 'published'
        steps:
            - name: Deploy to Production
              run: |
                echo "Deploying to production..."

            - name: Send Slack Notification
              uses: slackapi/slack-github-action@v2.0.0
              with:
                payload: |
                  {
                    "text": "ðŸš€ Deployment to *Production* was successful!",
                    "attachments": [
                      {
                        "color": "#36a64f",
                        "fields": [
                          {
                            "title": "Repo",
                            "value": "${{ github.repository }}",
                            "short": true
                          },
                          {
                            "title": "Branch",
                            "value": "${{ github.ref_name }}",
                            "short": true
                          },
                          {
                            "title": "Commit",
                            "value": "${{ github.sha }}",
                            "short": false
                          }
                        ]
                      }
                    ]
                  }
                webhook-type: incoming-webhook
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}